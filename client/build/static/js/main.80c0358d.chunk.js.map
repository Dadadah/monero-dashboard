{"version":3,"sources":["qr.jpg","components/Footer.js","components/MoneroContainer/Timer.js","components/Header.js","components/cards/ServerCard.js","components/cards/ConnectionCard.js","components/cards/MoneroCard.js","components/cards/ConnectionsCard.js","components/MoneroContainer/MoneroContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","Container","Row","Col","alt","src","qr","style","width","Timer","props","tickTime","tick","next","state","setState","tickInterval","this","setInterval","clearInterval","ProgressBar","animated","max","now","label","PureComponent","Header","update","info","update_avilable","busy","busy_syncing","Jumbotron","md","version","nettype","ServerCard","Card","Body","Title","Text","database_size","toFixed","free_space","ConnectionCard","incoming_connections_count","outgoing_connections_count","rpc_connections_count","MoneroCard","difficulty","height","target_height","ConnectionsCard","connections","map","conn","index","ip","incoming","current_upload","current_download","send_count","recv_count","MoneroContainer","getMonero","a","axios","result","moneroInfo","data","console","error","getConnections","post","moneroInterval","connectionsInterval","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80c0358d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/qr.1dbdb838.jpg\";","import Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport qr from '../qr.jpg'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className='footerContainer'>\r\n        <Container className='footer'>\r\n            <Row>\r\n                <Col>\r\n                    Like the dashboard?<br/> Please Consider Donating:<br/>8Adfyz4eUijhttLTa4W3Vzj2SFZGVWyT6GX4HADXScQ1d5FgyGssQETHwKZhSn7CStWafUcXzr6758njdqXPsYMdSEkLMyb\r\n\r\n                </Col>\r\n                <Col>\r\n                    <img alt='qr code' src={qr} style={{width:'125px'}}></img>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import { React, PureComponent } from 'react';\r\nimport ProgressBar from 'react-bootstrap/ProgressBar'\r\n\r\nclass Timer extends PureComponent {\r\n    tickTime = 30000;\r\n    constructor(props) {\r\n        super(props);\r\n        this.tickInterval = null;\r\n\r\n        this.state = {\r\n            tick:this.tickTime,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        //start the overall timer\r\n        this.tickInterval = setInterval(this.tick, 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // clear the interval timer\r\n        clearInterval(this.tickInterval);\r\n    }\r\n\r\n    //refresh timer for display\r\n    tick = () => {\r\n        const next = this.state.tick - 1000;\r\n        if(this.state.tick > 0) {\r\n            this.setState({tick:next});\r\n        } else {\r\n            this.setState({tick:this.tickTime});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const tick = this.state.tick/1000;\r\n\r\n        return (\r\n            <ProgressBar animated className='progress' max={30} now={tick} label={`${tick} s`}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Timer;\r\n","import Jumbotron from 'react-bootstrap/Jumbotron'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Timer from './MoneroContainer/Timer'\r\n\r\nfunction Header(props) {\r\n    const update = props.info.update_avilable ? 'Yes! ' : 'not today...';\r\n    const busy = props.info.busy_syncing? 'Yes, catching up.' : 'Nope, up to date.';\r\n\r\n    return (\r\n        <Jumbotron>\r\n            <h1>Monero Dashboard</h1>\r\n            <Container>\r\n                <Row>\r\n                    <Col md='4'>\r\n                        Monero Node Version:\r\n                    </Col>\r\n                    <Col>\r\n                        {props.info.version}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md='4'>\r\n                        Update Available:\r\n                    </Col>\r\n                    <Col>\r\n                        {update}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md='4'>\r\n                        Connected to:\r\n                    </Col>\r\n                    <Col>\r\n                        {props.info.nettype}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md='4'>\r\n                        Busy Syncing:\r\n                    </Col>\r\n                    <Col>\r\n                        {busy}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col/>\r\n                </Row>\r\n                <Row>\r\n                    <Col md='3'>\r\n                        <Timer/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Jumbotron>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import Card from 'react-bootstrap/Card'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nfunction ServerCard(props) {\r\n\r\n    return (\r\n        <Card className='dataCard'>\r\n            <Card.Body>\r\n                <Card.Title>Server Info</Card.Title>\r\n                <Card.Text>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col md='6'>\r\n                                Database Size:\r\n                            </Col>\r\n                            <Col md='6'>\r\n                                {(props.info.database_size/1024/1024/1024).toFixed(2)} GB\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md='6'>\r\n                                Free Space:\r\n                            </Col>\r\n                            <Col md='6'>\r\n                                {(props.info.free_space/1024/1024/1024).toFixed(2)} GB\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ServerCard;\r\n","import Card from 'react-bootstrap/Card'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nfunction ConnectionCard(props) {\r\n\r\n    return (\r\n        <Card className='dataCard'>\r\n            <Card.Body>\r\n                <Card.Title>Connection Stats</Card.Title>\r\n                <Card.Text>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col md='8'>\r\n                                Incomming Connections:\r\n                            </Col>\r\n                            <Col md='4'>\r\n                                {props.info.incoming_connections_count}\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md='8'>\r\n                                Outgoing Connections:\r\n                            </Col>\r\n                            <Col md='4'>\r\n                                {props.info.outgoing_connections_count}\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md='8'>\r\n                                RPC Connections:\r\n                            </Col>\r\n                            <Col md='4'>\r\n                                {props.info.rpc_connections_count}\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ConnectionCard;\r\n","import Card from 'react-bootstrap/Card'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nfunction MoneroCard(props) {\r\n\r\n    return (\r\n        <Card className='dataCard'>\r\n            <Card.Body>\r\n                <Card.Title>Monero Stats</Card.Title>\r\n                <Card.Text>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col md='6'>\r\n                                Difficulty\r\n                            </Col>\r\n                            <Col md='6'>\r\n                                {props.info.difficulty}\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md='6'>\r\n                                Height\r\n                            </Col>\r\n                            <Col md='6'>\r\n                                {props.info.height}\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md='6'>\r\n                                Target Height\r\n                            </Col>\r\n                            <Col md='6'>\r\n                                {props.info.target_height}\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default MoneroCard;\r\n","import Card from 'react-bootstrap/Card'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nfunction ConnectionsCard(props) {\r\n    return (\r\n        <Card className='dataCard connections'>\r\n            <Card.Body>\r\n                <Card.Title>Active Connections</Card.Title>\r\n                <Card.Text>\r\n                    <Row className='connectionsHeader'>\r\n                        <Col md='2'>\r\n                            IP\r\n                        </Col>\r\n                        <Col md='2'>\r\n                            Incoming\r\n                        </Col>\r\n                        <Col md='2'>\r\n                            Current Upload\r\n                        </Col>\r\n                        <Col md='2'>\r\n                            Current Download\r\n                        </Col>\r\n                        <Col md='2'>\r\n                            Send Count\r\n                        </Col>\r\n                        <Col md='2'>\r\n                            Receive Count\r\n                        </Col>\r\n                    </Row>\r\n                    <div className='connectionsData'>\r\n                    {props.connections.map((conn, index)=>{\r\n                        return (\r\n                            <Row>\r\n                                <Col md='2'>\r\n                                    {conn.ip}\r\n                                </Col>\r\n                                <Col md='2'>\r\n                                    {conn.incoming? 'True': 'False'}\r\n                                </Col>\r\n                                <Col md='2'>\r\n                                    {conn.current_upload}\r\n                                </Col>\r\n                                <Col md='2'>\r\n                                    {conn.current_download}\r\n                                </Col>\r\n                                <Col md='2'>\r\n                                    {conn.send_count}\r\n                                </Col>\r\n                                <Col md='2'>\r\n                                    {conn.recv_count}\r\n                                </Col>\r\n                            </Row>\r\n                        )\r\n                    })}\r\n                    </div>\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ConnectionsCard;\r\n","import { React, PureComponent } from 'react';\nimport axios from 'axios';\nimport Header from '../Header';\nimport ServerCard from '../cards/ServerCard';\nimport ConnectionCard from '../cards/ConnectionCard';\nimport MoneroCard from '../cards/MoneroCard';\nimport ConnectionsCard from '../cards/ConnectionsCard';\n\nclass MoneroContainer extends PureComponent {\n    tickTime = 30000;\n    constructor(props) {\n        super(props);\n\n        this.moneroInterval = null;\n        this.tickInterval = null;\n        this.connectionsInterval = null;\n        this.state = {\n            moneroInfo: {},\n            tick:this.tickTime,\n            connections: []\n        };\n    }\n\n    componentDidMount() {\n        this.getConnections();\n        this.getMonero();\n\n        //start the overall timer\n        //this.tickInterval = setInterval(this.tick, 1000);\n\n        // Start the monero timer\n        this.moneroInterval = setInterval(this.getMonero, this.tickTime);\n\n        //start the connections timer\n        this.connectionsInterval = setInterval(this.getConnections, this.tickTime);\n    }\n\n    componentWillUnmount() {\n        // clear the interval timer\n        clearInterval(this.moneroInterval);\n        clearInterval(this.tickInterval);\n        clearInterval(this.connectionsInterval);\n    }\n\n    //refresh timer for display\n    tick = () => {\n        const next = this.state.tick - 1000;\n        if(this.state.tick > 0) {\n            this.setState({tick:next});\n        } else {\n            this.setState({tick:this.tickTime});\n        }\n    }\n\n    /**\n     * gets data from the get_info endpoint\n     */\n    getMonero = async () => {\n        try {\n            const result = await axios({\n                'method': 'GET',\n                'url': '/api/get_info',\n            });\n\n            this.setState({\n                moneroInfo: result.data,\n            });\n\n        } catch (err) {\n            console.error('Error fetching monero data', err);\n        }\n    }\n\n    /**\n     * gets connections via json_rpc\n     */\n    getConnections = async() => {\n        try {\n            const result = await axios.post(\n                '/api/json_rpc',\n                {\"jsonrpc\":\"2.0\",\"id\":\"0\",\"method\":\"get_connections\"}\n            );\n\n            this.setState({\n                connections: result.data.result.connections,\n            });\n\n        } catch (err) {\n            console.error('Error fetching monero data', err);\n        }\n    }\n\n    render() {\n        const { moneroInfo, tick, connections } = this.state;\n\n        return (\n            <div className=\"MoneroContainer\">\n                <Header info={moneroInfo} tick={tick}/>\n                <ServerCard info={moneroInfo}/>\n                <ConnectionCard info={moneroInfo}/>\n                <MoneroCard info={moneroInfo}/>\n                <ConnectionsCard connections={connections}/>\n            </div>\n        );\n    }\n}\n\nexport default MoneroContainer;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\nimport Footer from './components/Footer';\nimport Container from 'react-bootstrap/Container';\nimport MoneroContainer from './components/MoneroContainer/MoneroContainer';\n\nfunction App() {\n    return (\n        <Container className='app'>\n            <MoneroContainer />\n            <Footer></Footer>\n        </Container>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}